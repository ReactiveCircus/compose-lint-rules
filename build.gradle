import com.android.build.gradle.AppPlugin
import com.android.build.gradle.LibraryPlugin
import org.jetbrains.kotlin.gradle.dsl.KotlinCompile

buildscript {
    ext.buildConfig = [
            minSdk    : 21,
            targetSdk : 30,
            compileSdk: 30,
            buildTools: '30.0.2'
    ]

    ext.versions = [
            androidGradlePlugin: '4.2.0-alpha13',
            androidLint        : '27.2.0-alpha13',
            detekt             : '1.14.1',
            mavenPublishPlugin : '0.13.0',
            kotlin             : '1.4.10',
            androidx           : [
                    core      : '1.5.0-alpha04',
                    annotation: '1.2.0-alpha01',
                    appCompat : '1.3.0-alpha02',
                    compose   : '1.0.0-alpha04'
            ],
            junit              : '4.13'
    ]

    repositories {
        mavenCentral()
        google()
        gradlePluginPortal()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:${versions.androidGradlePlugin}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:${versions.detekt}"
        classpath "com.vanniktech:gradle-maven-publish-plugin:${versions.mavenPublishPlugin}"
    }
}

allprojects {
    repositories {
        mavenCentral()
        google()
        jcenter()
    }

    plugins.withType(AppPlugin).configureEach { plugin ->
        extensions.getByName("android").compileOptions {
            sourceCompatibility = JavaVersion.VERSION_1_8
            targetCompatibility = JavaVersion.VERSION_1_8
        }
    }

    plugins.withType(LibraryPlugin).configureEach { plugin ->
        extensions.getByName("android").compileOptions {
            sourceCompatibility = JavaVersion.VERSION_1_8
            targetCompatibility = JavaVersion.VERSION_1_8
        }
    }

    tasks.withType(KotlinCompile).configureEach { task ->
        task.kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs += [
                    "-Xallow-jvm-ir-dependencies",
                    "-Xskip-prerelease-check",
                    "-progressive",
                    '-Xopt-in=kotlin.RequiresOptIn',
            ]
        }
    }

    tasks.withType(Test).configureEach {
        maxParallelForks Runtime.runtime.availableProcessors() * 2
        testLogging {
            events 'passed', 'skipped', 'failed'
        }
    }
}

subprojects {
    apply from: "$project.rootDir/gradle/detekt.gradle"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
